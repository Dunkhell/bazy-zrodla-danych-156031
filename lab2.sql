CREATE TABLE Regions AS (SELECT *
                         FROM "HR"."REGIONS");
CREATE TABLE Countries AS (SELECT *
                           FROM "HR"."COUNTRIES");
CREATE TABLE Locations AS (SELECT *
                           FROM "HR"."LOCATIONS");
CREATE TABLE Jobs AS (SELECT *
                      FROM "HR"."JOBS");
CREATE TABLE Departments AS (SELECT *
                             FROM "HR"."DEPARTMENTS");
CREATE TABLE Employees AS (SELECT *
                           FROM "HR"."EMPLOYEES");
CREATE TABLE Job_History AS (SELECT *
                             FROM "HR"."JOB_HISTORY");

ALTER TABLE Regions
    ADD PRIMARY KEY (Region_ID);
ALTER TABLE Countries
    ADD PRIMARY KEY (Country_ID);
ALTER TABLE Countries
    ADD FOREIGN KEY (Region_ID) REFERENCES Regions (Region_ID);
ALTER TABLE Locations
    ADD PRIMARY KEY (Location_ID);
ALTER TABLE Locations
    ADD FOREIGN KEY (Country_ID) REFERENCES Countries (Country_ID);
ALTER TABLE Jobs
    ADD PRIMARY KEY (Job_ID);
ALTER TABLE Jobs
    ADD CHECK (Max_salary - Min_salary >= 2000);
ALTER TABLE Departments
    ADD PRIMARY KEY (Department_ID);
ALTER TABLE Departments
    ADD FOREIGN KEY (Location_ID) REFERENCES Locations (Location_ID);
ALTER TABLE Employees
    ADD PRIMARY KEY (Employee_ID);
ALTER TABLE Employees
    ADD FOREIGN KEY (Job_ID) REFERENCES Jobs (Job_ID);
ALTER TABLE Job_history
    ADD CONSTRAINT PK_job_history PRIMARY KEY (Employee_ID, Start_date);
ALTER TABLE Job_history
    ADD FOREIGN KEY (Department_ID) REFERENCES Departments (Department_ID);
ALTER TABLE Job_history
    ADD FOREIGN KEY (Employee_ID) REFERENCES Employees (Employee_ID);
ALTER TABLE Job_history
    ADD FOREIGN KEY (Job_ID) REFERENCES Jobs (Job_ID);
ALTER TABLE Departments
    ADD FOREIGN KEY (Manager_ID) REFERENCES Employees (Employee_ID);
ALTER TABLE Employees
    ADD FOREIGN KEY (Manager_ID) REFERENCES Employees (Employee_ID);
ALTER TABLE Employees
    ADD FOREIGN KEY (Department_ID) REFERENCES Departments (Department_ID);

SELECT CONCAT(LAST_NAME, SALARY) AS ZAROBKI
FROM EMPLOYEES e
WHERE DEPARTMENT_ID BETWEEN 20 and 50
  AND SALARY BETWEEN 2000 and 7000
ORDER BY LAST_NAME;

SELECT e.HIRE_DATE, e.LAST_NAME, e.FIRST_NAME AS user_defined
FROM EMPLOYEES e
         JOIN EMPLOYEES m ON e.MANAGER_ID = m.EMPLOYEE_ID
WHERE EXTRACT(YEAR FROM m.HIRE_DATE) = 2005
ORDER BY user_defined;

SELECT CONCAT(e.FIRST_NAME, e.LAST_NAME) AS imie, e.SALARY, e.PHONE_NUMBER
FROM EMPLOYEES e
WHERE (SUBSTR(e.LAST_NAME, 3, 1) = 'e' AND e.FIRST_NAME LIKE '%cy%')
ORDER BY imie DESC, e.SALARY;

SELECT e.FIRST_NAME,
       e.LAST_NAME,
       CASE
           WHEN ROUND(MONTHS_BETWEEN(SYSDATE, e.HIRE_DATE)) < 150 THEN e.SALARY * 0.1
           WHEN ROUND(MONTHS_BETWEEN(SYSDATE, e.HIRE_DATE)) BETWEEN 150 and 200 THEN e.SALARY * 0.2
           ELSE e.SALARY * 0.3 END AS WYSOKOSC_DODATKU
FROM EMPLOYEES e;

SELECT SUM(e.SALARY) as SUMA, ROUND(AVG(e.SALARY), 0) as SREDNIA, D.DEPARTMENT_ID
FROM EMPLOYEES e
         INNER JOIN DEPARTMENTS D on e.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE e.SALARY > 5000
GROUP BY e.DEPARTMENT_ID;

SELECT e.LAST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME, J.JOB_ID
FROM EMPLOYEES E
         INNER JOIN DEPARTMENTS D on E.DEPARTMENT_ID = D.DEPARTMENT_ID
         INNER JOIN LOCATIONS L on D.LOCATION_ID = L.LOCATION_ID
         INNER JOIN JOBS J on E.JOB_ID = J.JOB_ID
WHERE L.CITY = 'Toronto';

SELECT E2.FIRST_NAME, E2.LAST_NAME
FROM EMPLOYEES E1
         INNER JOIN EMPLOYEES E2 on E2.MANAGER_ID = E1.EMPLOYEE_ID
WHERE E1.FIRST_NAME = 'Jennifer';

SELECT D.*
FROM DEPARTMENTS D
         LEFT JOIN EMPLOYEES E on D.DEPARTMENT_ID = E.DEPARTMENT_ID
WHERE E.DEPARTMENT_ID IS NULL;

CREATE TABLE Job_grades AS (SELECT *
                            FROM "HR"."JOB_GRADES");

SELECT E.FIRST_NAME,
       E.LAST_NAME,
       D.DEPARTMENT_NAME,
       E.SALARY,
       (SELECT JG.GRADE FROM JOB_GRADES JG WHERE E.SALARY BETWEEN JG.MIN_SALARY AND JG.MAX_SALARY) as GRADE
FROM EMPLOYEES E
         INNER JOIN DEPARTMENTS D on E.DEPARTMENT_ID = D.DEPARTMENT_ID;


SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY
FROM EMPLOYEES E
WHERE E.SALARY >= (SELECT ROUND(AVG(SALARY))
                   FROM EMPLOYEES)
ORDER BY e.SALARY DESC;

SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.LAST_NAME
FROM EMPLOYEES E
WHERE E.DEPARTMENT_ID IN (SELECT DISTINCT(D.DEPARTMENT_ID)
                          FROM DEPARTMENTS D
                                   INNER JOIN EMPLOYEES E on D.DEPARTMENT_ID = E.DEPARTMENT_ID
                          WHERE E.LAST_NAME LIKE '%u%');
